<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="clr-namespace:System.Windows.Documents;assembly=PresentationUI"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

  <Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
    <Setter Property="Background" Value="{DynamicResource Button.Static.Background}" />
    <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Border}" />
    <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}" />
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Padding" Value="8,4,8,4"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="border"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter"
                            RecognizesAccessKey="True"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False">
            </ContentPresenter>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
              <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" TargetName="border" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Background" Value="{DynamicResource Button.MouseOver.Background}" TargetName="border" />
              <Setter Property="Foreground" Value="{DynamicResource Button.MouseOver.Foreground}" />
              <Setter Property="BorderBrush" Value="{DynamicResource Button.MouseOver.Border}" TargetName="border" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Background" Value="{DynamicResource Button.Pressed.Background}" TargetName="border" />
              <Setter Property="Foreground" Value="{DynamicResource Button.Pressed.Foreground}" />
              <Setter Property="BorderBrush" Value="{DynamicResource Button.Pressed.Border}" TargetName="border" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Background" Value="{DynamicResource Button.Disabled.Background}" TargetName="border" />
              <Setter Property="Foreground" Value="{DynamicResource Button.Disabled.Foreground}" />
              <Setter Property="BorderBrush" Value="{DynamicResource Button.Disabled.Border}" TargetName="border" />
              <Setter Property="TextElement.Foreground" Value="{DynamicResource Button.Disabled.Foreground}" TargetName="contentPresenter" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <Style x:Key="{x:Type ToggleButton}"
           BasedOn="{StaticResource BaseButtonStyle}"
           TargetType="{x:Type ToggleButton}"/>

  <Style x:Key="{x:Type RepeatButton}"
           BasedOn="{StaticResource BaseButtonStyle}"
           TargetType="{x:Type RepeatButton}">
    <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false"/>
  </Style>

  <Style x:Key="{x:Type Button}"
           BasedOn="{StaticResource BaseButtonStyle}"
           TargetType="{x:Type Button}"/>


</ResourceDictionary>